\chapter{Déploiement d'applications}
\section{Introduction}
Le Cloud Computing se positionne actuellement en tête de liste des nouvelles technologies. Il
se caractérise par son extensibilité et élasticité et son exploitabilité par un grand nombre
d'utilisateurs dans le monde entier. 

pour deployer un application chez les cloud provider il faut le bien configurées et dimensionner l'environnement d'exécution,les dépendances de l'application pour prendre en compte
l'hétérogénéité et l'élasticité inhérentes au paradigme du Cloud Computing .

Notamment, il existe un grand nombre de provider ayant des niveaux de
fonctionnalité et des possibilités de dimensionnement hétérogènes parmi les dif-
férentes solutions de cloud disponibles (Amazon EC2, Rackspace cloud , WindowsAzure). Lors d'un déploiement d'application sur un PaaS, il faut choisir un
serveur d'application, la fréquence CPU nécessaire à l'exécution, la base de données à utiliser, sa capacité en terme espace mémoire, etc. Cette variabilité en
termes de configuration et de dimensionnement offre une multitude de possibilités de configurations qui sont généralement effectuées de manière ad hoc et sont
sources d'erreurs lorsqu'elles sont configurées à la main[QD12].
%il faut ajoute quelque chose


\section{Définition du déploiement automatique}
Après avoir développé un application , vous  pouvez le déployer, nous présentons trois grandes définitions quelque definition sur le déploiement : 
Nous commencerons par la définition de Clemens Szyperski [Szy03],puis puis nous poursuivrons par celle proposée par l'Object
Management Group (OMG) [OMG08] et enfin, nous finirons par la définition de l'université du Colorado.
[HHC+98].
\subsection{Définition de C. Szyperski}
La définition du déploiement proposée par C. Szyperski vise explicitement le domaine des
composants logiciels, sans pour autant préciser si elle se limite ou non à ce domaine. Le déploiement est
défini comme étant l'étape de préparation d'un composant en vue de l'installer dans un environnement
spécifique. C. Szyperski précise explicitement que le déploiement (c'est-à-dire, la préparation) revient à
renseigner les paramètres d'un descripteur de déploiement [Szy03].

Nous allons maintenant présenter quelles sont les étapes qui précèdent et qui suivent cette phase
de déploiement. Cela va nous permettre d'expliciter où cette phase de déploiement est située dans le cycle
de vie logiciel et quelle est sa portée. L'étape qui précède le déploiement est l'acquisition. C'est l'étape
d'obtention d'un composant logiciel. C. Szyperski précise que tout composant acquis est déployable. Ce
qui signifie qu'un composant proposé à l'acquisition est un livrable exécutable par une machine physique
ou virtuelle. Plus précisément, dans [Szy03], l'auteur met en avant le fait que tout composant doit être une
unité de déploiement (page 686). Il définit ensuite une unité de déploiement comme un délivrable
exécutable dans un environnement d'exécution, sans qu'un humain n'ait besoin d'intervenir pour modifier
le composant afin de le rendre effectivement installable et prêt à être exécuté. L'installation est l'étape qui
suit immédiatement le déploiement. Elle rend un composant disponible sur un site (host) particulier, dans
un environnement particulier. Il est précisé que cette étape d'installation est souvent automatisée. Enfin,
l'étape d'installation est suivie par le chargement (Loading) qui consiste à lancer l'exécution d'un
composant dans un contexte d'exécution particulier[lien vers le memoire].
\begin{center}
\includegraphics[scale=0.6]{Figures/deploiement_selon_Szy03.png}

\caption{figure :la phase de déploiement et son context selon[Szy03]}
\label{fig5}
\end{center}
\subsection{Définition de l'Object Management Group}La phase de déploiement est structurée en cinq étapes, à savoir, l'Installation, la Configuration,
le Planning, la Preparation et le Launch. Ces cinq étapes sont enchainées les unes après les autres de
manière linéaire et séquentielle.

La première étape est l'installation. Elle est définie comme la récupération, l'acquisition d'un
package logiciel (software package) publié et son rapatriement dans un dépôt logiciel sous le contrôle du
déployeur. Un dépôt peut se situer, ou non, sur la même machine ou sur le même système de fichier que
celui dans lequel le logiciel va être déployé. C'est une zone qui permet au déployeur d'appliquer des
politiques au logiciel, comme l'authentification ou la certification (du logiciel), avant de lancer toute étape
concernant l'exécution du logiciel à proprement dit. Un dépôt ne doit pas nécessairement être persistant et
ne doit pas, non plus, nécessairement stocker ou avoir une copie du logiciel ou des métadonnées du
logiciel. L'OMG propose, aussi, sa propre définition de l'activité d'installation. Ainsi, l'installation n'est
pas définie comme le déplacement d'un logiciel vers l'environnement d'exécution où il pourra ensuite être
activé, mais simplement comme le déplacement du logiciel acquis vers le dépôt du déployeur.

La seconde étape du processus de déploiement est la configuration. Pour être configuré, un
package logiciel doit être installé dans le dépôt du déployeur. Le déployeur est le seul à pouvoir
effectivement le configurer. Les possibilités de configuration offertes dépendent de chaque package
logiciel. Un package logiciel peut, par exemple, offrir des options de configuration concernant la langue à
utiliser, le système de mesure, le délai d'attente entre chaque mesure ou encore la fréquence et le
formatage des rapports de mesures générés. Plusieurs configurations peuvent être associées à un même
package logiciel. Enfin, cette seconde étape ne concerne que la configuration des fonctions du package
logiciel et n'est en aucun cas destinée à la prise de décisions concernant le déploiement comme, par
exemple, le choix de l'implémentation à utiliser ou, le cas échéant, le choix de la distribution des
différents éléments du package logiciel.

La troisième étape est la planification (Planning). Son but est de définir comment et où une
configuration va être exécutée dans l'environnement cible. Pour rappel, la spécification définit un
environnement comme étant une infrastructure composée d'ordinateurs et de réseaux. L'activité de
planification prend en compte les requis de la configuration à déployer, ainsi que les ressources offertes
par l'environnement cible et sélectionne les implémentations à utiliser. Elle décide également comment et
où la configuration donnée sera exécutée dans l'environnement cible. Le résultat de l'étape de
planification est un plan de déploiement spécifique (à la configuration en cours de déploiement, ainsi qu'à
l'environnement cible). Le déploiement ainsi mis en ½uvre est un déploiement sensible au contexte.

L'avant dernière étape est appelée préparation. Elle est définie comme la mise en ½uvre effective
des décisions prises lors de la planification. Ces décisions sont spécifiées dans le plan de déploiement. Le
but de la préparation est de rendre le logiciel prêt à être exécuté. Cette mise en ½uvre consiste, entre
autre, à déplacer des binaires exécutables dans les ordinateurs qui leur ont été attribués. Comme pour la
planification deux modes de préparation sont distingués. Le premier est le mode juste à temps, le second
est le mode par avance. Le mode juste à temps implique que l'étape de préparation doit immédiatement
être suivie par l'étape de lancement. Le mode par avance n'impose pas cette contrainte.

La cinquième et dernière étape est le lancement (Launch). Elle consiste à démarrer l'exécution du
logiciel, en prenant, dans l'environnement, toutes les ressources requises par le ou les packages logiciels.
Le lancement d'une application à base de composants implique l'instanciation des composants dans les
ordinateurs de l'environnement cible, la configuration de ces instances de composants et la mise en place
des interactions entre les différentes instances et enfin, le démarrage de l'exécution de l'application en
elle-même. Dès que l'application s'exécute (c'est-à-dire une fois qu'elle est dans l'état activé) alors, soit
l'application s'exécute tant que son exécution n'est pas complète, soit elle est arrêtée (c'est-à-dire
désactivée) en utilisant la même infrastructure de déploiement que celle par laquelle son lancement a été
effectué[lien vers le memoire].

Les cinq étapes que nous venons de présenter peuvent tout à fait être déroulées une par une
séparément, ou comme une seule grande étape de déploiement entièrement automatisée. La figure ci-
dessous présente ces cinq étapes, ainsi que les liens entre ces étapes et le vecteur (c'est-à-dire l'unité de
déploiement) utilisé par chaque lien.

 \begin{center}
\includegraphics[scale=0.6]{Figures/deploiement_definie_par_OMG.png}

\caption{figure :la phase de déploiement et son context selon OMG]}
\label{fig6}
\end{center}
\subsection{}
Nous allons présenter maintenant la définition de la phase de déploiement proposée dans
[HHC+98].
